[gd_scene load_steps=9 format=2]

[ext_resource path="res://player.png" type="Texture" id=1]
[ext_resource path="res://VisionBody.gd" type="Script" id=2]
[ext_resource path="res://icon.png" type="Texture" id=3]

[sub_resource type="CircleShape2D" id=1]

[sub_resource type="Shader" id=2]
code = "shader_type canvas_item;

uniform vec3 color; // you can assign a default value to uniforms

void fragment(){
	COLOR = vec4(color, 1.0-UV.x);
}"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/color = Vector3( 0.9, 0.8, 0.1 )

[sub_resource type="Shader" id=4]
code = "shader_type canvas_item;

uniform vec3 color; // you can assign a default value to uniforms

void fragment(){
	COLOR = vec4(color, 1.0-UV.x);
}"

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )
shader_param/color = Vector3( 1, 1, 0 )

[node name="Enemy" type="KinematicBody2D"]
position = Vector2( 0.000305176, -0.00012207 )
rotation = -8.34465e-07
collision_layer = 8

[node name="FoeShape" type="CollisionShape2D" parent="."]
position = Vector2( 0.772964, 0.553345 )
shape = SubResource( 1 )

[node name="FoeSprite" type="Sprite" parent="."]
position = Vector2( -2.19203, -2.34366 )
z_index = 10
texture = ExtResource( 1 )

[node name="Polygon2D" type="Polygon2D" parent="."]

[node name="VisionBody" type="Area2D" parent="."]
material = SubResource( 3 )
position = Vector2( 1.55595, -0.17865 )
collision_layer = 16
script = ExtResource( 2 )

[node name="CollisionPolygon" type="CollisionPolygon2D" parent="VisionBody"]
position = Vector2( -69.5562, -121.821 )
polygon = PoolVector2Array( 39, 9, 89, 9, 67, 121 )

[node name="VisionPolygon" type="Polygon2D" parent="VisionBody"]
modulate = Color( 0.933333, 0.635294, 0.0666667, 1 )
self_modulate = Color( 0.933333, 0.635294, 0.0666667, 1 )
material = SubResource( 5 )
position = Vector2( -8, -4.00001 )
color = Color( 0.933333, 0.635294, 0.0666667, 1 )
offset = Vector2( -61.2654, -120.308 )
texture = ExtResource( 3 )
polygon = PoolVector2Array( 39, 9, 89, 9, 67, 121 )
[connection signal="body_entered" from="VisionBody" to="VisionBody" method="_on_body_entered"]
